Bibliography File of books and articles read by Jason Luu

IEEE stands for IEEE Trans. on Computer-Aided Design of Integrated Circuits

@inproceedings{PCuts,
title={Combinational and Sequential Mapping with Priority Cuts},
author={Mishchenko, A. and Sungmin Cho and Chatterjee, S. and Brayton, R.},
booktitle={IEEE/ACM Int'l Conf. on CAD},
year={2007},
location={San Jose, CA},
volume={},
number={},
pages={354-361},
}

@Book{betz_vpr99,
  author =       "Vaughn Betz and Jonathan Rose and Alexander Marquardt",
  title =        {{Architecture and CAD for Deep-Submicron FPGAs}},
  publisher =    "Kluwer Academic Publishers",
  year =         1999,
  address =      "Norwell, Massachusetts",
}
Describes VPR, simulated annealing, pathfinder router, timing analysis, and electrical models using Elmore delay.  First comprehensive and accurate modelling.  Not the first to do any specific technique for FPGAs.  Bidirectional routing, homogeneous LUTs assumption.  Cluster-based architecture.

@article{ahmed04,
  author =       "Elias Ahmed and Jonathan Rose",
  title =        {{The Effect of LUT and Cluster Size on Deep-Submicron FPGA Performance and Density}},
  year =         2004,
  month =        "March",
  journal =      "IEEE Trans. on VLSI Systems",
  volume =       12,
  number =       3,
  pages =        "288--298",
}
A new sweep on traditional architectural parameters (N, K, I).  Large LUTs up speed and reduce routing interconnect but up local interconnect.  Assumes O(N^2) local interconnect.  Concludes that 6-LUTs offer area-delay min and not just 4-LUT.

@article{Tessier07,
  author =       "Russel Tessier and Vaughn Betz and David Neto and Thiagaraja Gopalsamy",
  title =        {{Power-aware RAM Mapping for FPGA Embedded Memory Blocks}},
  year =         2007,
  month =        "February",
  journal =      "IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems",
  volume =       26,
  number =       2,
  pages =        "278-290",
}
First paper on applying RAM power optimization techniques for FPGAs.  Techniques came from ASICs.  Two methods, map enable to clock enable and partition RAMs using a mix of horizontal and vertical slicing (horizontal increases mux size, verticle means more slices turned on during use).

@misc{ he94,
  author = "J. He and J. Rose",
  title = {{Technology Mapping for Heterogeneous FPGAs}},
  text = {{J. He, J. Rose, Technology Mapping for Heterogeneous FPGAs , Proc. ACM
    Int'l Symposium on FPGA, Feb. 1994.}},
  year = "1994",
  url = "citeseer.ist.psu.edu/he94technology.html" 
}
Looks at tech mapping for heterogeneous FPGAs.  Looks at LUTs with two different pin counts and minimizes area only by minimizing pin-count.  Tree-based method.  Breaks netlist into single-fanout trees, for each tree, it iterates through each possible number of large LUTs and implements that tree.  Then combines all the trees with a tree-merge that is similar to polynomial multiplication.  It can be extended to more than two types of LUTs but this is not scalable at all.  Uses heuristics from Chortle-crf.  Savings of 48% in area over post-processing of homogeneous mapper.

@article{Wilton00,
  author =       "Steve J.E. Wilton",
  title =        {{Heterogeneous Technology Mapping for Area Reduction in FPGA’s with Embedded Memory Arrays}},
  year =         2000,
  month =        "January",
  journal =      "IEEE Trans. ON COMPUTER-AIDED DESIGN OF INTEGRATED CIRCUITS AND SYSTEMS",
  volume =       19,
  number =       1,
  pages =        "56--68",
}
Reduce area with small delay penalty by mapping to un-used embedded memories.  Uses FlowMap to get a homogeneous mapping then packs into memories.  Given a seed node and a I-input O-output memory, it looks at the maximal I-input cut then takes the O maximum fan-out free cone from that cut to pack into memory.  To find the best packing, it iterates through all the seed nodes.  Can do depth restrictions as well by modelling memories as a scaled depth of a LUT (eg. 1 memory is equal to 3 LUTs in depth).  Maps 56.7 4-LUTs into 2K bit memory block; memory block takes up equivalent of 16 4-LUTs of silicon area therefore significant.

@article{ikuon08,
  author =       "Ian Kuon and Russell Tessier and Jonathan Rose",
  title =        {{FPGA Architecture: Survey and Challenges}},
  year =         2008,
  journal =      "Foundations and Trends in Electronic Design Automation",
  volume =       2,
  number =       2,
  pages =        "135--253",
}
Overview of FPGA architectures.  Talks about area, delay, power techniques in the architecture and circuit levels.  Discusses early history, early FPGA devices such as SRAM, FLASH, EEPROM, anti-fuse based programming.  Focused on island-style FPGA with SRAM look-up tables.  Talks about routing and circuit-level tricks to improve it (dual VDD, sleep transistors, fast-delay multiplexor design).  Some stuff on I/O's and difficulties of supporting various I/O standards, weak overview here.  Talk of challenges and alternatives to FPGAs.  Challenges being area, delay, power gap vs ASICs.  Alternatives discussed being standard-cell ASICs and structured ASICs.  Mentions design-specific testing as a way to increase yield for FPGAs.

@mastersthesis{PaladinoThesis,
  author =	 "Daniele Paladino",
  title =	 {{Academic Clustering and Placement Tools for Modern Field-Programmable Gate Array Architectures}},
  school =	 "University of Toronto",
  address =	 "Toronto, Ontario, Canada",
  year =	 2008
}
Packer and placer for FPGA soft-logic into Altera Stratix I and Cyclone devices.  Rule-based constraints for packing.  If rule, Max rule, Split rule, and Pair rule for soft logic.  Supports carry-chains.  For memories: need to allow the number of positions for block to be variable and allow max # positions to be variable.  Also, need to allow more levels of hierarchy.  Proposes method of expanding rules to handle these deficiencies.  Also has sparse packing heuristic that didn't give much area gains.  He should have looked at Singh02.  Understands invalid locations to represent hard blocks in placement.  One major strength of this work is his comparison to commercial tools.  He compared his clusterer and placement tool to Altera's commercial Quartus II and comes close (closer than 90%) quality of results.  His experiment flow uses Quartus II for synthesis and technology mapping before entering his code and finally Quartus II again for routing and timing analysis (Quartus II placement when testing his clustering tool only).

@article{betz_vpack97,
  title={{Cluster-Based Logic Blocks for FPGAs: Area-Efficiency vs. Input Sharing and Size}},
  author={Vaughn Betz and Jonathan Rose},
  journal={IEEE Custom Integrated Circuits Conf.},
pages = {551--554},
  year={1997}
}
Greedy, untimed, packing algorithm (VPACK) for FPGAs.  Discovers the 2N + 2 rule for # of inputs into cluster for 4-input LUTs.

@article{Marquardt_tvpack97,
  title={{Using Cluster-Based Logic Blocks and Timing-Driven Packing to Improve FPGA Speed and Density}},
  author={Alexander Marquardt and Vaughn Betz and Jonathan Rose},
  journal={ACM Int'l Symp. on FPGAs},
  pages={37--46},
  year={1999}
}
Timing-driven packing on top of VPACK.  Same greedy algorithm with modified attraction function that is a weighted sum of area and timing. Produces better area results than  VPACK because of packing fanin and fanout into the same cluster.  Note that fan-in and fan-out tend to have smaller nets than shared inputs.  20% area-delay improvement for clusters of size ~8.  Timing is a simple two topological traversals: first annotate the arrival times from inputs to outputs, second determine slacks from outputs to inputs.
My own speciulation is that to reduce area, pack nets with low fan-out nodes for area instead of shared inputs/outputs.

lookup
Hierarchical FPGA clustering to improve routability

@article{Singh02,
  title={{Efficient Circult Clustering for Area and Power Reduction in FPGAs}},
  author={Amit Singh and Ganapathy Parthasarathy and Malgorzata Marek-Sadowksa},
  journal={ACM Trans. on Design Automation of Electronic Systems},
  volume=7,
  number=4,
  pages={643--663},
  month={Nov},
  year={2002}
}
Singh's packer packs less tightly than T-VPack because it tries to create a uniform Rent's exponent across all the clusters.  A key characteristic of this heuristic is that it priortizes the BLEs before packing based on the number of nets incident to it and the total number net edges of those incident nets.  This allows the algorithm to more intelligently select the seed and future blocks such that more nets are absorbed thus reducing channel width.  The area-delay product of this packer is 25% less than that of T-VPack after placement and routing of the netlist.


@article{Karypis_hmetis97,
    author = {George Karypis and Rajat Aggarwal and Vipin Kumar and Shashi Shekhar},
    title = {{Multilevel hypergraph partitioning: Application in VLSI domain}},
    journal = {IEEE Trans. on Very Large Scale Inegration (VLSI) Systems},
	volume = 7,
	number = 1,
	month = {Mar},
    year = {1999},
    pages = {69--79}
}
Bisection of hypergraphs to minimize the number of cuts using simulated annealing.  The hypergraph is gradually "coarsened" (nodes are grouped) then recursively "uncoarsened" with each stage having simulated annealing to optimize the quality (this is called a V-cycle).  Various "coarsening" techniques were employed.  Quality of partitions were 6% to 23% better on average than other techniques at the time and 4-10 times faster.  Coarsening heuristics: edge coarsening (group pairs of nodes joined by many hyperedges), hyperedge coarsening (group sets of nodes joined by hyperedge), modified hyperedge coarsening to connect together broken hypergraphs from hyperedge coarsening.



@article{Jayaraman_01,
    author = {Rajeev Jayaraman},
    title = {{Physical Design for FPGAs}},
    journal = {Proceedings of the 2001 Int'l Symp. on Physical design},
    year = {2001},
    pages = {214--221}
}
Overview of FPGA physical design and reinforces a lot of "common knowledge" in our field.  In 2001, FPGAs were used for production, pre-production, and prototyping (each at 1/3rd).  The key benefits of FPGAs include business-side time-to-market and an inexpensive life-cycle compared to ASICs.  Early on, a fast runtime is more important than Fmax, later on, Fmax is more important than runtime. Also, a compile cannot exceed 11 hours even late in the life-cycle where performance is important.  Electrical effects (deep-submicron effects) must be shielded from the user.  Since FPGAs come in fixed bin sizes, the marginal cost of increasing logic utilization is zero UNLESS it forces the user to use a larger device.  CAD and architecture is developed simultaneously for FPGAs with the CAD tools often evaluating prospective architectures.



@mastersthesis{KarchmerThesis,
  author =	 "David Karchmer",
  title =	 "A Field-Programmable System with Reconfigurable Memory",
  school =	 "University of Toronto",
  address =	 "Toronto, Ontario, Canada",
  year =	 1994
}
Design of the TM-1; a multi-FPGA development platform.  Focuses on the donnect architecture and time-multiplexed memory architecture.  Overviews many other types of multi-FPGA development platforms classified according to interconnect structure: linear, 2-D nearest-neighbour, crossbar.  I wonder though if such a problem can be solved if we treat the FPGA itself as a CLB solve the inter-FPGA routing as a regular FPGA-style routing.  This paper defines the memory packing problem as packing a set of logical memories into another set of physical memories legally (legally is defined as meeting access time requirements) with the optimization goal of minimizing area.  4 assumptions are made: homogeneous physical memories, no word-sharing, power of 2 depth, partition only when the word or depth of the logical memory exceeds the physical memory.  Accurate Models for LUT area and less accurate models for delay were used to pack the memories.  An optimal bound-and-branch approach (O(m^n)) was presented along with a heuristic approach.  Not much analysis was spent on heuristic algorithm.  The heuristic algorithm is orders of magnitude faster with ~10% area penalty for large designs.

@article{Chen_07,
    author = {Doris Chen and Kristofer Vorwerk and Andrew Kennings},
    title = {{Improving Timing-Driven FPGA Packing with Physical Information}},
    journal = {Int'l Conf. on Field Programmable Logic and Applications},
    year = {2007},
    pages = {117--123}
}
Use hmetis to do an extremely quick partioning and placement of FPGA without design rule checks.  Then ues the grid distance as part of the cost function on whether or not to put a block in a cluster.  Introduces DPACK which uses the stated method.  HDPACK first uses the hybrid first choice clustering (HFCC) heuristic; namely, it groups blocks with high affinity together (affinity being defined as maximizing the gain-cost function) and uses those as small clusters then switches over to DPACK to finish the job with tight packing.  By itself, HFCC is not good because although it absorbs nets well compared to DPACK, it creates clusters that cannot be grouped together thus increasing the number of CLBs.  VPR was used to place-and-route the circuits in the experiments.  T-VPACK was used as the baseline.  Runtime numbers are comparable between all three packing algorithms whether or not physical information was used.  Without the initial placement info, DPACK and HDPACK beats T-VPACK on wirelenth, external nets, and critical path delay.  The main advantage lies in the differences in the heuristic function.  T-VPACK normalizes the attraction function with the number of inputs into the LUT whereas DPACK and HDPACK use an attraction function based on 1/(number of connections in net).  This means that DPACK and HDPACK will select nets with lower fanouts to pack thus eliminate the number of external nets better than T-VPACK.  [Personal Note: I was going to do that too but it's too late now :P.  I can incorporate this simple change into the packer later].  Without physical information, the wirelenth reduction is approximately 10%.  With physical information, this gets reduced a further 5%.  The critical path improves most with physical information by ~5%.  Minimum channel width improvement of 20% for DPACK and 25% for HDPACK.  T-VPACK remains the best in terms of minimizing the # of CLBs with DPACK at second place requiring 0.7% more (negligible.


@article{Rose_04,
  author =       "Jonathan Rose",
  title =        {{Hard vs. Soft: The Central Question of Pre-Fabricated Silicon}},
  journal =    {{34th IEEE Int'l Symp. on Multiple-Valued Logic (ISMVL 2004)}},
  year =         2004,
  month = May,
  publisher = {IEEE Computer Society},
  address =      "Toronto, Canada",
  pages = {2--5}
}
Overview of FPGA architectural considerations of what to make reprogrammable and what to make soft.  It defines soft logic as the purely reprogrammable components of an FPGA (this means even flip-flops are not soft logic but are classified as hard).  It shows that heterogeneous blocks should typically be made partly reprogrammable even if they implement a fixed function so that they can be used more often.  The idea is that hard blocks are good if used but waste area if not used.  It illustrates the need for CAD tools to be able to handle heterogeneity to make decisions on what is important to include and what isn't.  Talks about soft vs hard processors.  Hard processors has a huge advantage (30x speed), soft processors allow a hard vs soft trade-off.  Seems to me like a poor argument, there is no point doing a trade-off if another technology dominates unless one can find trade-off points that are not dominated.  It also gives an example of the Altera ALM as a means to make soft logic better.


@article{Ngai_95, 
title={An {SRAM}-Programmable Field-Configurable Memory}, 
author={Ngai, T. and Rose, J. and Wilton, S.J.E.}, 
journal={IEEE Custom Integrated Circuits Conf.},
year={1995}, 
volume={}, 
number={}, 
pages={499-502}, 
keywords={SRAM chips, application specific integrated circuits, field programmable gate arrays, memory architecture, reconfigurable architecturesASIC memory, FPGA, SRAM-programmable field-configurable memory, aspect ratios, memory architecture, memory blocks}, 
doi={10.1109/CICC.1995.518232}, 
ISSN={}, }
One method to create FPGA SRAM Memories that can have configurable aspect ratios.  The convention in describing different aspect ratios in memory is to state the depth first then the width; for example, a 256x4 memory is a memory with 256 words and each word is 4 bits wide.  The method to create memories that have reconfigurable aspect ratios is to first start with a basic memory block that has a fixed aspect ratio of 128x8.  A programmable routing fabric is used to interconnect the data and address lines such that aspect ratios of 256x4, 512x2, and 1024x1 can be created from that 128x8 basic memory block.  In order to be able to do bit writes that are smaller than 8 bits (such as 1-bit writes for the 1024x1 case), the basic memory block needs to have write enable lines for every bit.  To create larger memories, multiple basic memory blocks are chained together using bus-based routing (one configuration bit controls a bus of routing segments).  To make access times predictable, the basic memory blocks are connected using a pattern similar to a H-tree in clock routing.  A 4K size chip using 4 basic memory blocks was fabricated but did not work completely.  Some test vectors failed and the author did not know the reason for those failures.  The penalty on core area for the chip was 38% more than the 4 non-reconfigurable basic memory blocks and the speed is 46% slower than the ASIC memory.  The mapping block (the block that makes the basic 128x8 memory block configurable to other aspect ratios) had a 10% area overhead compared to the fixed size 128x8 memory block.  In my opinion, the cost of reprogrammability is very low for area but is fairly expensive in terms of delay.  The good thing though is that soft logic overhead is much higher at about 25x more according to the measuring the gap paper.


@article{Kuon_07,
 author = {Kuon, Ian and Rose, Jonathan},
 title = {Measuring the Gap Between FPGAs and ASICs},
 journal = {IEEE Trans. On Computer-Aided Design of Integrated Circuits and Systems},
 year = {2007},
 issn = {0278-0070},
 pages = {203--215},
 volume = {26},
 number={2},
 doi = {10.1109/TCAD.2006.884574},
 publisher = {IEEE},
 }
Comparison of FPGAs vs ASICs in area, delay, and power; the results ratios were 35, 3.2, 14 respectively for soft logic and area was 21 with hard blocks.  Main difficulties are benchmark selection, experiment methodology, and measurment methodology.  For benchmarks, open core designs and U of T designs were used; these benchmarks were mostly small from 68 to 16,000 ALUTs. The FPGA used was the 90 nm Altera Stratix II and the ASIC technology used was 90nm CMOS standard cell from STMicroelectronics.  I/Os take up significant die area for both ASICs and FPGAs and this area was completely ignored.  The descrete size problem for FPGAs was largely mitigated by counting used tiles (logic+routing) for the FPGA.


@INPROCEEDINGS{Ni_05, 
title={A New {FPGA} Packing Algorithm Based on the Modeling Method for Logic Block}, 
author={Gang Ni and Jiarong Tong and Jinmei Lai}, 
booktitle={IEEE Int'l Conf. on ASICs},
year={2005}, 
month={Oct.}, 
volume={2}, 
number={}, 
pages={877-880}, 
keywords={CAD, field programmable gate arrays, logic circuits, logic designCAD, FPGA, TV-Pack, universal logic block packing, universal pack}, 
doi={10.1109/ICASIC.2005.1611445}, 
ISSN={}, 
}
Takes the T-VPack algorithm for register packing and generalizes it by representing a library of different BLEs with each BLE represented by a graph of programmable edges.  Afterwards, it does pattern matching to try to fill the BLEs in its library.  The pattern matching process .  Poorly written article, there is much ambiguity about the background of what they did and how their comparison.  There are no runtime numbers.  There is no discussion about what to put together if there is choice.  Their algorithm greedily packs primitives together until it fills a BLE then stops and returns the BLE then continues.  The algorithm complexity is huge, assuming that the BLE design is constant and assuming that the number of types of BLE designs are constant, the algorithm complexity is O(N * E * N).  Assuming that the number of edges connecting the BLEs is on average a constant K, this means the complexity is O(N^3).


@inproceedings{Ahmed_08,
 author = {Ahmed, Taneem and Kundarewich, Paul and Anderson, Jason and Taylor, Brad and Aggarwal, Rajat},
 title = {{Architecture-Specific Packing for Virtex-5 FPGAs}},
 booktitle = {ACM Int'l Symp. on FPGAs},
 year = {2008},
 pages = {5--13},
 }
Packing for the Virtex-5 FPGA that contains memories, DSP, and dual-output 6 LUTs (a LUT can either be a 6-LUT or two 5-LUTs with shared inputs).  A cluster consists of 2 slices where each slice contains 4 dual-output 6-LUTs.  The packing algorithm is done during placement.  Xilinx ISE uses analytic placement and the packing costs are considered during placement.  The two packing costs are to decrease cost most when two LUTs can be packed together, second most when only the 6-LUT is used, and least when only the 5-LUT is used. There is a 10.5% SLICE reduction for 3.3% performance degredation when using this algorithm.  Power numbers were given but 0.7% leakage and also 0.7% total power reduction is trivial and does not seem statistically significant given just 18 test cases.  A second technique presented in this paper is to discover chains of DSP blocks and then pack memories according to such chains.  Similarly, memories are also packed together if they are chained.  Placement then tries to align these chains so that they match up horizontally (ie DSP 1 and Mem 1 that it connects to are lined horizontally).  There is an average of 11 % improvement in performance doing this.  Some generalizations that can be gathered is that circuits with repeatable structures should be chained together in packing then kept in alignment in placement.  Second, it is architecturally interesting to explore complex BLEs that may have more than one output.




@inproceedings{369777,
 author = {Nam, Gi-Joon and Aloul, Fadi and Sakallah, Karem and Rutenbar, Rob},
 title = {A comparative study of two Boolean formulations of FPGA detailed routing constraints},
 booktitle = {ISPD '01: Proceedings of the 2001 Int'l Symp. on Physical design},
 year = {2001},
 isbn = {1-58113-347-2},
 pages = {222--227},
 location = {Sonoma, California, United States},
 doi = {http://doi.acm.org/10.1145/369691.369777},
 publisher = {ACM},
 address = {New York, NY, USA},
 }
Authors used two different methods to represent detailed routing using SAT.  Authors did not do combined global-detail routing and did detailed routing based on a global routing solution given by another tool.  The first SAT formulation is called "track" based and was formulated to include connectivity constraints for nets and exclusivity constraint across different nets.  The "route" based formulation enumerated all the different detailed routes available and forced one and only one to be active.  It also had a exclusivity constraint.  The route based formulation used mostly 2 var CNF clauses compared to the track based method and this is the suspected reason for the order of magnitude faster runtime for the route based formulation.  There are still some circuits which take over 24 hours to route when the routing gets hard and VPR is able to beat both formulations on average because VPR uses a combined global-detail router.

@MISC{Een_03,
    author = {Niklas Een and Niklas Sörensson},
    title = {An Extensible SAT-solver [ver 1.2]},
    year = {2003}
}



@misc{altera_revenue_08,
  journal =       {{Altera Corporation}},
  title =        {{Altera Fact Sheet}},
  year =         2009,
  publisher = {Altera Corporation},
  HOWPUBLISHED = "\url{http://www.altera.com/corporate/news_room/factsheet/nr-factsheet.html}",
}


@misc{xilinx_revenue_08,
  journal =       {{Xilinx Inc}},
  title =        {{Xilinx Corporate Fact Sheet}},
  year =         2009,
  publisher = {Xilinx Incorporated},
  HOWPUBLISHED = "\url{http://www.altera.com/corporate/news_room/factsheet/nr-factsheet.html}",
}


@article{Luu_09,
author = {Jason Luu and Keith Redmond and William Lo and Paul Chow and Lothar Lilge and Jonathan Rose},
title = {FPGA-Based Monte Carlo Computation of Light Absorption for Photodynamic Cancer Therapy},
journal ={Field-Programmable Custom Computing Machines, Annual IEEE Symp. on},
volume = {0},
year = {2009},
isbn = {978-0-7695-3716-0},
pages = {157-164},
doi = {http://doi.ieeecomputersociety.org/10.1109/FCCM.2009.24},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}



@inproceedings{luu_vpr5_09,
 author = {Luu, Jason and Kuon, Ian and Jamieson, Peter and Campbell, Ted and Ye, Andy and Fang, Wei Mark and Rose, Jonathan},
 title = {{VPR 5.0: FPGA CAD and Architecture Exploration Tools with Single-Driver Routing, Heterogeneity and Process Scaling}},
 booktitle = {ACM Int'l Symp. on FPGAs},
 year = {2009},
 pages = {133--142},
 }


 @inproceedings{Bozorgzadeh_01,
 author = {Bozorgzadeh, Elaheh and Memik, Seda and Sarrafzadeh, Majid},
 title = {{RPack: Routability-driven Packing for Cluster-Based FPGAs}},
 booktitle = {ASP-DAC '01: Proceedings of the 2001 Asia and South Pacific Design Automation Conf.},
 year = {2001},
 isbn = {0-7803-6634-4},
 pages = {629--634},
 location = {Yokohama, Japan},
 doi = {http://doi.acm.org/10.1145/370155.370567},
 publisher = {ACM},
 address = {New York, NY, USA},
 }
@ARTICLE{Bozorgzadeh04,
    author = {E. Bozorgzadeh and S. Memik and X. Yang and M. Sarrafzadeh},
    title = {{Routability-driven Packing: Metrics and Algorithms for Cluster-Based FPGAs}},
    journal = {Journal of Circuits Systems and Computers},
    year = {2004},
    volume = {13},
    pages = {77--100}
}
Bozorgzadeh explored adding routability heuristics to T-VPack and developed the T-RPack algorithm.  T-RPack uses the T-VPack algorithm with an altered area-driven heuristic in the affinity function.  Instead of just counting the number of nets of a candidate block with common nets in the cluster, T-RPack weights each pin based on whether it is an input or output pin, how many edges it is connected to inside the cluster, and whether the cluster contains a driver for that net.  As well, the routability function penalizes adding net input pins to a cluster by assigning a negative gain to each additional input net.  It can reduce the minimum channel width by 3% and results in a 5% less critical path delay.


@misc{ASIC_Mask_Cost,
  author =       {Richard Quinnell},
  title =        {{ASICs Stumble At 45 nm}},
  year =         2009,
  month = January,
  publisher = {Electronic Design},
  HOWPUBLISHED = "\url{http://electronicdesign.com/article/digital/asics-stumble-at-45-nm20434.aspx}",
}


@misc{ASIC_tapeout_time,
  author =       { },
  title =        {{ViASIC Technology Enables First Proven Two-Week Turnaround from Tapeout to Production for ASICs}},
  year =         2008,
  month = March,
  publisher = {Design and Reuse},
  HOWPUBLISHED = "\url{http://www.design-reuse.com/news/17898/viasic.html}",
}


@misc{pervez_09,
  author =       {Baber A Pervez and Alastair Smith and George Constantinides},
  title =        {{Fourth Year Design Project}},
  year =         2009,
  publisher = {Imperial College},
}


@misc{XML,
  author =       {W3C },
  title =        {{Extensible Markup Language (XML)}},
  year =         2003,
  publisher =   {W3C},
  HOWPUBLISHED = "\url{http://www.w3.org/XML/}",
}

@misc{stratixIVb,
  journal =       {Altera Corporation},
  title =        {{Stratix IV Device Family Overview}},
  month = November,
  year =         2009,
  publisher =   {Altera Corporation},
  HOWPUBLISHED = "\url{http://www.altera.com/literature/hb/stratix-iv/stx4_siv51001.pdf}",
}

@misc{virtex6,
  title =        {{Xilinx Virtex-6 Family Overview}},
  journal = {Xilinx Inc.},
  year =         2009,
  publisher = {Xilinx Inc.},
  HOWPUBLISHED = "\url{http://www.xilinx.com/support/documentation/data_sheets/ds150.pdf}"
}


@Book{lemieux04,
  author =       "Guy Lemieux and David Lewis",
  title =        "Design of Interconnection Networks for Programmable Logic",
  publisher =    "Kluwer Academic Publishers",
  year =         2004,
  address =      "Norwell, Massachusetts",
}

@article{Ho10,
  author =       "Ho, C. and Yu, C. and Leong, P. and Luk, W. and Wilton, S.",
  title={{Floating-point FPGA: Architecture and Modeling}},
  journal={IEEE Trans. on VLSI},
  volume={17},
  number={12},
  pages={1709--1718},
  year={2009},
}

@inproceedings{Jang09,
 author = {Jang, Stephen and Wu, Dennis and Jarvin, Mark and Chan, Billy and Chung, Kevin and Mishchenko, Alan and Brayton, Robert},
 title = {SmartOpt: an industrial strength framework for logic synthesis},
 booktitle = {ACM Int'l Symp. on FPGAs},
 year = {2009},
 isbn = {978-1-60558-410-2},
 pages = {237--240},
 location = {Monterey, California, USA},
 doi = {http://doi.acm.org/10.1145/1508128.1508165},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


@conference{odin2,
  title={{Odin II-An Open-Source Verilog HDL Synthesis Tool for CAD Research}},
  author={Jamieson, P. and Kent, K and Gharibian, F. and Shannon, L.},
  booktitle={IEEE Annual Int'l Symp. on Field-Programmable Custom Computing Machines},
  pages={149--156},
  year={2010},
  organization={IEEE}
}


@article{hauck2006totem,
  title={{Totem: domain-specific reconfigurable logic}},
  author={Hauck, S. and Compton, K. and Eguro, K. and Holland, M. and Phillips, S. and Sharma, A.},
  journal={IEEE Trans. on VLSI Systems},
  pages={1--25},
  year={2006},
  publisher={Citeseer}
}

@article{quartus,
  title={{Version 9.0 Handbook}},
  author={Quartus, II},
  journal={San Jose, Ca: Altera. Available at<http://www.altera.com/>. Accessed in},
  year={2009}
}

@conference{jamieson05,
  title={{A verilog RTL synthesis tool for heterogeneous FPGAs}},
  author={Jamieson, P. and Rose, J.},
  booktitle={Int'l Conf. on Field Programmable Logic and Applications},
  volume={2005},
  pages={305--310},
  year={2005}
}

@article{ling08,
  title={{Scalable Synthesis and Clustering Techniques Using Decision Diagrams}},
  author={Ling, A.C. and Zhu, J. and Brown, S.D.},
  journal={IEEE Trans. on CAD},
  volume={27},
  number={3},
  pages={423},
  year={2008},
}

@conference{lin06,
  title={{Optimal Simultaneous Mapping and Clustering for FPGA Delay Optimization}},
  author={Lin, J. and Chen, D. and Cong, J.},
  booktitle={ACM/IEEE Design Automation Conf.},
  pages={472--477},
  year={2006},
}

@techreport{blif,
  title={{Berkeley logic interchange format}},
  author={Berkeley, UC},
  institution={Technical report, University of California at Berkeley, 1998}
}

@misc{abc,
  title={{ABC: A System for Sequential Synthesis and Verification}},
  author={Mishchenko, A. and others},
  journal={Electrical Engineering and Computer Sciences UC Berkley},
  howpublished="\url{http://www.eecs.berkeley.edu/alanmi/abc}",
  year={2009}
}

@conference{jang08,
  title={{WireMap: FPGA Technology Mapping for Improved Routability}},
  author={Jang, S. and Chan, B. and Chung, K. and Mishchenko, A.},
  booktitle={ACM Int'l Symp. on FPGAs},
  pages={47--55},
  year={2008},
  organization={ACM}
}

@conference{yiannacouras05,
  title={{The Microarchitecture of FPGA-Based Soft Processors}},
  author={Yiannacouras, P. and Rose, J. and Steffan, J.G.},
  booktitle={Proceedings of the 2005 Int'l Conf. on Compilers, Architectures and Synthesis for Embedded Systems},
  pages={212},
  year={2005},
  organization={ACM}
}

@conference{lewis03,
  title={{The Stratix$\pi$ Routing and Logic Architecture}},
  author={Lewis, D. and Betz, V. and Jefferson, D. and Lee, A. and Lane, C. and Leventis, P. and Marquardt, S. and McClintock, C. and Pedersen, B. and Powell, G. and others},
  booktitle={Proceedings of the 2003 ACM/SIGDA eleventh Int'l Symp. on Field programmable gate arrays},
  pages={12--20},
  year={2003},
  organization={ACM New York, NY, USA}
}

@article{oliveira09,
  title={{CGADL: An Architecture Description Language for Coarse-Grained Reconfigurable Arrays}},
  author={Filho, J. and Masekowsky, S. and Schweizer, T. and Rosenstiel, W.},
  journal = {IEEE Trans. on VLSI},
  number = {9},
  pages = {1247--1259},
  volume = {17},
  year = {2009}
}

@article{mishra06,
  title={{Architecture Description Languages for Programmable Embedded Systems}},
  author={Mishra, P. and Dutt, N.},
  journal={IEEE Proc. on Computers and Digital Techniques},
  pages={285--297},
  number = {3},
  volume = {152},
  year={2005},
}


@article{jamieson05b,
  title={{Mapping multiplexers onto hard multipliers in FPGAs}},
  author={Jamieson, P. and Rose, J.},
  journal={Proc. of IEEE-NECAS},
  pages={323--326},
  year={2005}
}


@article{lampret2001openrisc,
  title={{OpenRISC 1200 IP Core Specification}},
  author={Lampret, D.},
  journal={OpenCores},
  year={2001}
}


@article{mcnc,
  title={{Logic Synthesis and Optimization Benchmarks User Guide Version 3.0}},
  author={Yang, S.},
  journal={MCNC, Jan},
  year={1991},
  publisher={Citeseer}
}


@misc{virtex6_logic,
  title={{Xilinx Virtex-6 FPGA Configurable Logic Block User Guide}},
  journal={Xilinx Inc},
  year={2009},
  month="September",
  publisher = {Xilinx Inc.},
  HOWPUBLISHED =  "\url{http://www.xilinx.com/support/documentation/user_guides/ug364.pdf}"
}

@inproceedings{Mishchenko_06,
 author = {Mishchenko, Alan and Chatterjee, Satrajit and Brayton, Robert},
 title = {{Improvements to Technology Mapping for LUT-Based FPGAs}},
 booktitle = {ACM Int'l Symp. on FPGAs},
 year = {2006},
 pages = {41--49},
 }

@misc{luu09guide,
  title={{VPR and T-Vpack User's Manual (Version 5.0)}},
  author={Luu, Jason and Kuon, Ian and Jamieson, Peter and Campbell, Ted and Ye, Andy and Fang, Wei Mark and Rose, Jonathan},
  year={2009},
  HOWPUBLISHED = "\url{http://www.eecg.utoronto.ca/vpr/VPR_5.pdf}",
  publisher={University of Toronto},
}

@article{hauck2000high,
  title={{High-performance carry chains for FPGA's}},
  author={Hauck, S. and Hosler, M. and Fry, T.},
  journal={IEEE Trans. on Very Large Scale Integration (VLSI) Systems},
  volume={8},
  number={2},
  pages={138--147},
  year={2000}
}

@misc{chaudhary1999fpga,
  title={{FPGA having logic element carry chains capable of generating wide XOR functions}},
  author={Chaudhary, K.},
  year={1999},
  month=mar # "~30",
  publisher={Google Patents},
  note={US Patent 5,889,411}
}

@article{Ebeling96,
  title={{RaPiD Reconfigurable Pipelined Datapath}},
  author={Ebeling, C. and Cronquist, D. and Franklin, P.},
  journal={Field-Programmable Logic Smart Applications, New Paradigms and Compilers},
  pages={126--135},
  publisher={Springer},
  year=1996
}

@conference{maidee2008fpga,
  title={{FPGA family composition and effects of specialized blocks}},
  author={Maidee, P. and Hakim, N. and Bazargan, K.},
  booktitle={Int'l Conf. on Field Programmable Logic and Applications},
  pages={101--106},
  year={2008}
}

@conference{mcmurchie1995pathfinder,
  title={{PathFinder: A Negotiation-Based Performance-Driven Router for FPGAs}},
  author={McMurchie, L. and Ebeling, C.},
  booktitle={ACM Int'l Symp. on FPGAs},
  pages={111--117},
  year={1995},
}

@book{Verilog,
  title={{Fundamentals of Digital Logic with Verilog Design}},
  author={Brown, S. and Vranesic, Z.},
  year={2007},
  publisher={Tata McGraw-Hill}
}

@conference{wang2008,
  title={{A novel packing algorithm for sparse crossbar FPGA architectures}},
  author={Wang, K. and Yang, M. and Wang, L. and Zhou, X. and Tong, J.},
  booktitle={Int'l Conf. on Solid-State and Integrated-Circuit Technology},
  pages={2345--2348},
  year={2008}
}

@conference{lewis2005stratix,
  title={{The Stratix II logic and routing architecture}},
  author={Lewis, D. and Ahmed, E. and Baeckler, G. and Betz, V. and Bourgeault, M. and Cashman, D. and Galloway, D. and Hutton, M. and Lane, C. and Lee, A. and others},
  booktitle={ACM Int'l Symp. on Field-Programmable Gate Arrays},
  pages={14--20},
  year={2005},
  organization={ACM}
}

@conference{cronquist1996emerald,
  title={{Emerald: An Architecture-Driven Tool Compiler for FPGAs}},
  author={Cronquist, D. and McMurchie, L.},
  booktitle={ACM Int'l Symp. on FPGAs},
  pages={144--150},
  year={1996},
}


@mastersthesis{jluuThesis,
  author =	 "Jason Luu",
  title =	 {{A Hierarchical Description Language and Packing Algorithm for Heterogeneous FPGAs}},
  school =	 "University of Toronto",
  address =	 "Toronto, Ontario, Canada",
  year =	 2010
}


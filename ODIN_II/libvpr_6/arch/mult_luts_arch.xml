<architecture>
  
  <!-- jluu and ken: ODIN II specific config -->
  <models>
    <model name="multiply">
      <input_ports>
      <port name="a"/>
      <port name="b"/>
      </input_ports>
      <output_ports> 
      <port name="out"/> 
      </output_ports> 
    </model>

    <model name="single_port_ram">
      <input_ports>
      <port name="we"/>     <!-- control -->
      <port name="addr"/>  <!-- address lines -->
      <port name="data"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="clk" is_clock="1"/>  <!-- memories are often clocked -->
      </input_ports>
      <output_ports> 
      <port name="out"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      </output_ports> 
    </model>

    <model name="dual_port_ram">
      <input_ports>
      <port name="we1"/>     <!-- write enable -->
      <port name="we2"/>     <!-- write enable -->
      <port name="addr1"/>  <!-- address lines -->
      <port name="addr2"/>  <!-- address lines -->
      <port name="data1"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="data2"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="clk" is_clock="1"/>  <!-- memories are often clocked -->
      </input_ports>
      <output_ports> 
      <port name="out1"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      <port name="out2"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      </output_ports> 
    </model>
  </models>
  <!-- jluu and ken: ODIN II specific config ends -->

  <!-- jluu and ken: Physical descriptions begin -->
  <layout auto="1.0"/>
    <device>
      <sizing R_minW_nmos="5726.870117" R_minW_pmos="15491.700195" ipin_mux_trans_size="1.000000"/>
      <timing C_ipin_cblock="1.191000e-14" T_ipin_cblock="1.482000e-10"/>
      <area grid_logic_tile_area="30000.000000"/>
      <chan_width_distr>
        <io width="1.000000"/>
        <x distr="uniform" peak="1.000000"/>
        <y distr="uniform" peak="1.000000"/>
      </chan_width_distr>
      <switch_block type="wilton" fs="3"/>
    </device>
    <switchlist>
      <switch type="mux" name="0" R="94.841003" Cin="1.537000e-14" Cout="2.194000e-13" Tdel="6.562000e-11" mux_trans_size="10.000000" buf_size="1"/>
    </switchlist>
    <segmentlist>
      <segment freq="1.000000" length="4" type="unidir" Rmetal="11.064550" Cmetal="4.727860e-14">
        <mux name="0"/>
        <sb type="pattern">1 1 1 1 1</sb>
        <cb type="pattern">1 1 1 1</cb>
      </segment>
    </segmentlist>
    <typelist>
      <io capacity="7" t_inpad="7.734000e-11" t_outpad="4.395000e-11">
        <fc_in type="frac">0.15</fc_in>
        <fc_out type="frac">0.125</fc_out>
      </io>
      <type name="clb">
        
        <!-- jluu New proposal method (BEGIN) -->
        <pb_type>
          <input name="I" num_pins="22"/>
          <output name="O" num_pins="10"/>
          <clock name="clk" num_pins="1"/>

          <pb_type name="ble" num_pb="10">
            <input name="in" num_pins="4"/>
            <output name="out" num_pins="1"/>
            <clock name="clk" num_pins="1"/>

            <pb_type name="lut_4" blif_model=".names" num_pb="1" class="lut">
              <input name="in" num_pins="4" port_class="lut_in"/>
              <output name="out" num_pins="1" port_class="lut_out"/>
            </pb_type>
            <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
              <input name="D" num_pins="1" port_class="D"/>
              <output name="Q" num_pins="1" port_class="Q"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>

            <!-- jedit hack must put all same element names in order (ie. direct direct mux, not direct mux direct, otherwise the parser miscounts children -->
            <interconnect>
              <direct name="lutout" input="lut_4.out" output="ff.D"/>
              <direct name="lutin" input="ble.in" output="lut_4.in"/>
              <direct name="clk" input="ble.clk" output="ff.clk"/>
              <mux name="ffOrLut" input="ff.Q lut_4.out" output="ble.out"/>
            </interconnect>
          </pb_type>

          <interconnect>
            <complete name="crossbar" input="clb.I ble[9:0].out" output="ble[9:0].in"/>
            <complete name="clk" input="clb.clk" output="ble[9:0].clk"/>
            <direct name="clbout" input="ble[9:0].out" output="clb.O"/>
          </interconnect>
        </pb_type>
        
        <!-- jluu New proposal method (END) -->

        <fc_in type="frac">0.15</fc_in>
        <fc_out type="frac">0.125</fc_out>
        <pinclasses>
          <class type="in">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 </class>
          <class type="out">22 23 24 25 26 27 28 29 30 31 </class>
          <class type="global">32 </class>
        </pinclasses>
        <pinlocations>
          <loc side="left">1 5 9 13 17 21 23 27 31 </loc>
          <loc side="right">3 7 11 15 19 25 29 </loc>
          <loc side="top">2 6 10 14 18 24 28 32 </loc>
          <loc side="bottom">0 4 8 12 16 20 22 26 30 </loc>
        </pinlocations>
        <gridlocations>
          <loc type="fill" priority="1"/>
        </gridlocations>
      </type>
	  
	  
	   <type name="clbmult" height ="3"> <!-- general purpose complex block -->
       
        <!-- jluu New proposal method (BEGIN) -->
        <pb_type> <!-- 64 in 64 out GPCB w/ 1 clk -->
          <input name="I" num_pins="64"/>
          <output name="O" num_pins="64"/>
          <clock name="clk" num_pins="1"/>

		  
		  <mode name="large_lut_mode"> <!-- Mode 1 is large-lut mode (wants 60 input pins) -->
          <pb_type name="ble" num_pb="30"> <!-- clb has 30 bles which are each a 4-lut and a ff -->
            <input name="in" num_pins="4"/>
            <output name="out" num_pins="1"/>
            <clock name="clk" num_pins="1"/>

            <pb_type name="lut_4" blif_model=".names" num_pb="1" class="lut"> <!-- primitive-->
              <input name="in" num_pins="4" port_class="lut_in"/>
              <output name="out" num_pins="1" port_class="lut_out"/>
            </pb_type>
            <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop"> <!-- primitive-->
              <input name="D" num_pins="1" port_class="D"/>
              <output name="Q" num_pins="1" port_class="Q"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>
		

            <!-- jedit hack must put all same element names in order (ie. direct direct mux, not direct mux direct, otherwise the parser miscounts children -->
            <interconnect>
              <direct name="ffin" input="lut_4.out" output="ff.D"/>
              <direct name="lutin" input="ble.in" output="lut_4.in"/>
              <direct name="clk" input="ble.clk" output="ff.clk"/>
              <mux name="ffOrLut" input="ff.Q lut_4.out" output="ble.out"/>
            </interconnect>
			 </pb_type> <!-- End of BLE pbtype -->

          <interconnect> <!-- connections that are from GPCB to BLE -->
            <complete name="crossbar" input="clb_mult.I ble[29:0].out" output="ble[29:0].in"/>
            <complete name="clk" input="clb_mult.clk" output="ble[29:0].clk"/>
            <direct name="outputs" input="ble[29:0].out" output="clb_mult.O[29:0]"/>
          </interconnect>
		  	</mode> <!-- End of LUT mode -->
			
			
	  
	   <mode name="clb_mult_modes"> <!-- Start of multiplier modes -->
        <pb_type name="block_mult" num_pb="1">
          <input name="a" num_pins="32"/>
          <input name="b" num_pins="32"/>
          <output name="out" num_pins="64"/>

              <mode name="mult_16x16">
                <pb_type name="mult_16x16_slice" num_pb="2">
                  <input name="A_cfg" num_pins="16"/>
                  <input name="B_cfg" num_pins="16"/>
                  <output name="OUT_cfg" num_pins="32"/>

                  <pb_type name="mult_16x16" blif_model=".subckt multiply" num_pb="1">
                    <input name="a" num_pins="16"/>
                    <input name="b" num_pins="16"/>
                    <output name="out" num_pins="32"/>
                  </pb_type>

                  <interconnect>
                    <direct name="a2a" input="mult_16x16_slice.A_cfg" output="mult_16x16.a"/>
                    <direct name="b2b" input="mult_16x16_slice.B_cfg" output="mult_16x16.b"/>
                    <direct name="out2out" input="mult_16x16.out" output="mult_16x16_slice.OUT_cfg"/>
                  </interconnect>
                </pb_type>
                <interconnect>
                  <direct name="a2a" input="block_mult.a" output="mult_16x16_slice[1:0].A_cfg"/>
                  <direct name="b2b" input="block_mult.b" output="mult_16x16_slice[1:0].B_cfg"/>
                  <direct name="out2out" input="mult_16x16_slice[1:0].OUT_cfg" output="block_mult.out"/>
                </interconnect>
              </mode>
   
   <mode name="mult_32x32">
            <pb_type name="mult_32x32_slice" num_pb="1">
              <input name="A_cfg" num_pins="32"/>
              <input name="B_cfg" num_pins="32"/>
              <output name="OUT_cfg" num_pins="64"/>

              <pb_type name="mult_32x32" blif_model=".subckt multiply" num_pb="1">
                <input name="a" num_pins="32"/>
                <input name="b" num_pins="32"/>
                <output name="out" num_pins="64"/>
              </pb_type>

              <interconnect>
                <direct name="a2a" input="mult_32x32_slice.A_cfg" output="mult_32x32.a"/>
                <direct name="b2b" input="mult_32x32_slice.B_cfg" output="mult_32x32.b"/>
                <direct name="out2out" input="mult_32x32.out" output="mult_32x32_slice.OUT_cfg"/>
              </interconnect>
            </pb_type>
            <interconnect>
              <direct name="a2a" input="block_mult.a" output="mult_32x32_slice.A_cfg"/>
              <direct name="b2b" input="block_mult.b" output="mult_32x32_slice.B_cfg"/>
              <direct name="out2out" input="mult_32x32_slice.OUT_cfg" output="block_mult.out"/>
            </interconnect>
          </mode> <!-- End of multiply modes -->
             
            </pb_type>
            <interconnect>
              <direct name="a" input="clb_mult.I[31:0]" output="block_mult.a"/>
              <direct name="b" input="clb_mult.I[63:32]" output="block_mult.b"/>
              <direct name="out" input="block_mult.out" output="clb_mult.O"/>
            </interconnect>
          </mode>
		
          </pb_type> <!-- End of clb pb that is a GPCB of either logic or multiply design -->

        
        <!-- jluu New proposal method (END) -->

        <fc_in type="frac">0.15</fc_in>
        <fc_out type="frac">0.125</fc_out>
        <pinclasses>
		  <class type="in">0</class>
          <class type="in">1</class>
          <class type="in">2</class>
          <class type="in">3</class>
          <class type="in">4</class>
          <class type="in">5</class>
          <class type="in">6</class>
          <class type="in">7</class>
          <class type="in">8</class>
          <class type="in">9</class>
          <class type="in">10</class>
          <class type="in">11</class>
          <class type="in">12</class>
          <class type="in">13</class>
          <class type="in">14</class>
          <class type="in">15</class>
          <class type="in">16</class>
          <class type="in">17</class>
          <class type="in">18</class>
          <class type="in">19</class>
          <class type="in">20</class>
          <class type="in">21</class>
          <class type="in">22</class>
          <class type="in">23</class>
          <class type="in">24</class>
          <class type="in">25</class>
          <class type="in">26</class>
          <class type="in">27</class>
          <class type="in">28</class>
          <class type="in">29</class>
          <class type="in">30</class>
          <class type="in">31</class>
          <class type="in">32</class>
          <class type="in">33</class>
          <class type="in">34</class>
          <class type="in">35</class>
          <class type="in">36</class>
          <class type="in">37</class>
          <class type="in">38</class>
          <class type="in">39</class>
          <class type="in">40</class>
          <class type="in">41</class>
          <class type="in">42</class>
          <class type="in">43</class>
          <class type="in">44</class>
          <class type="in">45</class>
          <class type="in">46</class>
          <class type="in">47</class>
          <class type="in">48</class>
          <class type="in">49</class>
          <class type="in">50</class>
          <class type="in">51</class>
          <class type="in">52</class>
          <class type="in">53</class>
          <class type="in">54</class>
          <class type="in">55</class>
          <class type="in">56</class>
          <class type="in">57</class>
          <class type="in">58</class>
          <class type="in">59</class>
          <class type="in">60</class>
          <class type="in">61</class>
          <class type="in">62</class>
          <class type="in">63</class>
		  <class type="out">64</class>
		  <class type="out">65</class>
		  <class type="out">66</class>
		  <class type="out">67</class>
		  <class type="out">68</class>
		  <class type="out">69</class>
		  <class type="out">70</class>
		  <class type="out">71</class>
		  <class type="out">72</class>
          <class type="out">73</class>
          <class type="out">74</class>
          <class type="out">75</class>
          <class type="out">76</class>
          <class type="out">77</class>
          <class type="out">78</class>
          <class type="out">79</class>
          <class type="out">80</class>
          <class type="out">81</class>
          <class type="out">82</class>
          <class type="out">83</class>
          <class type="out">84</class>
          <class type="out">85</class>
          <class type="out">86</class>
          <class type="out">87</class>
          <class type="out">88</class>
          <class type="out">89</class>
          <class type="out">90</class>
          <class type="out">91</class>
          <class type="out">92</class>
          <class type="out">93</class>
          <class type="out">94</class>
          <class type="out">95</class>
          <class type="out">96</class>
          <class type="out">97</class>
          <class type="out">98</class>
          <class type="out">99</class>
          <class type="out">100</class>
          <class type="out">101</class>
          <class type="out">102</class>
          <class type="out">103</class>
          <class type="out">104</class>
          <class type="out">105</class>
          <class type="out">106</class>
          <class type="out">107</class>
          <class type="out">108</class>
          <class type="out">109</class>
          <class type="out">110</class>
          <class type="out">111</class>
          <class type="out">112</class>
          <class type="out">113</class>
          <class type="out">114</class>
          <class type="out">115</class>
          <class type="out">116</class>
          <class type="out">117</class>
          <class type="out">118</class>
          <class type="out">119</class>
          <class type="out">120</class>
          <class type="out">121</class>
          <class type="out">122</class>
          <class type="out">123</class>
          <class type="out">124</class>
          <class type="out">125</class>
          <class type="out">126</class>
          <class type="out">127</class>          
		  <class type="global">128 </class>
        </pinclasses>
        <pinlocations>

          <loc side="left">0 8 16 24 32 40 48 56 64 65 73 74 75 76 77 78 79 80 81 82</loc>
          <loc side="left" offset="1">1 9 17 25 33 41 49 57 66 83 84 85 86 87 88 89 90 91 92</loc>
          <loc side="left" offset="2">2 10 18 26 34 42 50 58 67 93 94 95 96 97 98 99 100 101 102</loc>
          <loc side="top" offset="2">3 11 19 27 35 43 51 59 68 103 104 105 106 107 108 109 </loc>
          <loc side="right">4 12 20 28 36 44 52 60 69 113 114 115 116 117 118 119 120 121 122</loc>
          <loc side="right" offset="1">5 13 21 29 37 45 53 61 70 123 124 125 126 127 128 </loc>
          <loc side="right" offset="2">6 14 22 30 38 46 54 62 71 110 111 112 </loc>
          <loc side="bottom">7 15 23 31 39 47 55 63 72</loc>
		  
        </pinlocations>
        <gridlocations>
          <loc type="col" start="5" priority="3" repeat ="6"/>
		  <loc type="rel" pos=".5" priority="2"/>
        </gridlocations>
      </type>
	  
	  
	  
	  
	  
	  
	  
	  

      <type name="spmemory">
        <!-- jluu New proposal method part 2 (BEGIN) -->
        <!-- Memory block with varying size and port abilities -->
        <pb_type>
          <input name="addr" num_pins="11"/>
          <input name="din" num_pins="4"/>
          <input name="we" num_pins="1"/>
          <output name="dout" num_pins="4"/>
          <clock name="clk" num_pins="1"/>

            <!-- Declare a 2048x1 memory type -->
            <mode name="mem_2048x1_mode">
              <pb_type name="mem_2048x1" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
                <input name="addr" num_pins="11" port_class="address"/>
                <input name="data" num_pins="1" port_class="data_in"/>
                <input name="we" num_pins="1" port_class="write_en"/>
                <output name="out" num_pins="1" port_class="data_out"/>
                <clock name="clk" num_pins="1" port_class="clock"/>
              </pb_type>
              <interconnect>
                <direct name="address" input="block_RAM.addr[10:0]" output="mem_2048x1.addr"/>
                <direct name="datain" input="block_RAM.din[0:0]" output="mem_2048x1.data"/>
                <direct name="writeen" input="block_RAM.we" output="mem_2048x1.we"/>
                <direct name="clk" input="block_RAM.clk" output="mem_2048x1.clk"/>
                <direct name="out" input="mem_2048x1.out" output="block_RAM.dout[0:0]"/>
              </interconnect>
            </mode>

            <!-- Declare a 1024x2 memory type -->
            <mode name="mem_1024x2_mode">
              <pb_type name="mem_1024x2" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
                <input name="addr" num_pins="10" port_class="address"/>
                <input name="data" num_pins="2" port_class="data_in"/>
                <input name="we" num_pins="1" port_class="write_en"/>
                <output name="out" num_pins="2" port_class="data_out"/>
                <clock name="clk" num_pins="1" port_class="clock"/>                
              </pb_type>
              <interconnect>
                <direct name="address" input="block_RAM.addr[9:0]" output="mem_1024x2.addr"/>
                <direct name="datain" input="block_RAM.din[1:0]" output="mem_1024x2.data"/>
                <direct name="writeen" input="block_RAM.we" output="mem_1024x2.we"/>
                <direct name="clk" input="block_RAM.clk" output="mem_1024x2.clk"/>
                <direct name="out" input="mem_1024x2.out" output="block_RAM.dout[1:0]"/>
              </interconnect>
            </mode>

            <!-- Declare a 512x4 memory type -->
            <mode name="mem_512x4_mode">
              <pb_type name="mem_512x4" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
                <input name="addr" num_pins="9" port_class="address"/>
                <input name="data" num_pins="4" port_class="data_in"/>
                <input name="we" num_pins="1" port_class="write_en"/>
                <output name="out" num_pins="4" port_class="data_out"/>
                <clock name="clk" num_pins="1" port_class="clock"/>
              </pb_type>
              <interconnect>
                <direct name="address" input="block_RAM.addr[8:0]" output="mem_512x4.addr"/>
                <direct name="datain" input="block_RAM.din[3:0]" output="mem_512x4.data"/>
                <direct name="writeen" input="block_RAM.we" output="mem_512x4.we"/>
                <direct name="clk" input="block_RAM.clk" output="mem_512x4.clk"/>
                <direct name="out" input="mem_512x4.out" output="block_RAM.dout[3:0]"/>
              </interconnect>
            </mode>
        </pb_type>

        <!-- jluu New proposal method part 2 (END) -->
        <fc_in type="frac">0.15</fc_in>
        <fc_out type="frac">0.125</fc_out>
        <pinclasses>
          <class type="in">0</class>
          <class type="in">1</class>
          <class type="in">2</class>
          <class type="in">3</class>
          <class type="in">4</class>
          <class type="in">5</class>
          <class type="in">6</class>
          <class type="in">7</class>
          <class type="in">8</class>
          <class type="in">9</class>
          <class type="in">10</class>
          <class type="in">11</class>
          <class type="in">12</class>
          <class type="in">13</class>
          <class type="in">14</class>
          <class type="in">15</class>
          <class type="in">16</class>
          <class type="in">17</class>
          <class type="in">18</class>
          <class type="in">19</class>
          <class type="in">20</class>
          <class type="in">21</class>
          <class type="out">22</class>
          <class type="out">23</class>
          <class type="out">24</class>
          <class type="out">25</class>
          <class type="out">26</class>
          <class type="out">27</class>
          <class type="out">28</class>
          <class type="out">29</class>
          <class type="out">30</class>
          <class type="out">31</class>
          <class type="global">32</class>
        </pinclasses>
        <pinlocations>
          <loc side="left">1 5 9 13 17 21 23 27 31 </loc>
          <loc side="right">3 7 11 15 19 25 29 </loc>
          <loc side="top">2 6 10 14 18 24 28 32 </loc>
          <loc side="bottom">0 4 8 12 16 20 22 26 30 </loc>
        </pinlocations>
        <gridlocations>
          <loc type="col" start="4" repeat="15" priority="3"/>
          <loc type="rel" pos="0.4"  priority="5"/>
        </gridlocations>
      </type>


      <type name="dpmemory" height="2">
        <!-- jluu New proposal method part 2 (BEGIN) -->
        <!-- Memory block with varying size and port abilities -->
        <pb_type>
          <input name="addr1" num_pins="11"/>
          <input name="addr2" num_pins="11"/>
          <input name="data1" num_pins="4"/>
          <input name="data2" num_pins="4"/>
          <input name="we1" num_pins="1"/>
          <input name="we2" num_pins="1"/>
          <output name="out1" num_pins="4"/>
          <output name="out2" num_pins="4"/>
          <clock name="clk" num_pins="1"/>

          <!-- Declare a 1024x4 memory type -->
          <mode name="mem_1024x4_mode">
            <pb_type name="mem_1024x4" blif_model=".subckt dual_port_ram" class="memory" num_pb="1">
              <input name="addr1" num_pins="10" port_class="address1"/>
              <input name="addr2" num_pins="10" port_class="address2"/>
              <input name="data1" num_pins="4" port_class="data_in1"/>
              <input name="data2" num_pins="4" port_class="data_in2"/>
              <input name="we1" num_pins="1" port_class="write_en1"/>
              <input name="we2" num_pins="1" port_class="write_en2"/>
              <output name="out1" num_pins="4" port_class="data_out1"/>
              <output name="out2" num_pins="4" port_class="data_out2"/>
              <clock name="clk" num_pins="1" port_class="clock"/>   
            </pb_type>
            <interconnect>
              <direct name="address1" input="block_RAM.addr1[9:0]" output="mem_1024x4.addr1"/>
              <direct name="address2" input="block_RAM.addr2[9:0]" output="mem_1024x4.addr2"/>
              <direct name="datain1" input="block_RAM.data1" output="mem_1024x4.data1"/>
              <direct name="datain2" input="block_RAM.data2" output="mem_1024x4.data2"/>
              <direct name="writeen1" input="block_RAM.we1" output="mem_1024x4.we1"/>
              <direct name="writeen2" input="block_RAM.we2" output="mem_1024x4.we2"/>
              <direct name="dataout1" input="mem_1024x4.out1" output="block_RAM.out1"/>
              <direct name="dataout2" input="mem_1024x4.out2" output="block_RAM.out2"/>
              <direct name="clk" input="block_RAM.clk" output="mem_1024x4.clk"/>
            </interconnect>
          </mode>

          <!-- Declare a 2048x2 memory type -->
          <mode name="mem_2048x2_mode">
            <pb_type name="mem_2048x2" blif_model=".subckt dual_port_ram" class="memory" num_pb="1">
              <input name="addr1" num_pins="11" port_class="address1"/>
              <input name="addr2" num_pins="11" port_class="address2"/>
              <input name="data1" num_pins="2" port_class="data_in1"/>
              <input name="data2" num_pins="2" port_class="data_in2"/>
              <input name="we1" num_pins="1" port_class="write_en1"/>
              <input name="we2" num_pins="1" port_class="write_en2"/>
              <output name="out1" num_pins="2" port_class="data_out1"/>
              <output name="out2" num_pins="2" port_class="data_out2"/>
              <clock name="clk" num_pins="1" port_class="clock"/>              
            </pb_type>
            <interconnect>
              <direct name="address1" input="block_RAM.addr1" output="mem_2048x2.addr1"/>
              <direct name="address2" input="block_RAM.addr2" output="mem_2048x2.addr2"/>
              <direct name="datain1" input="block_RAM.data1[1:0]" output="mem_2048x2.data1"/>
              <direct name="datain2" input="block_RAM.data2[1:0]" output="mem_2048x2.data2"/>
              <direct name="writeen1" input="block_RAM.we1" output="mem_2048x2.we1"/>
              <direct name="writeen2" input="block_RAM.we2" output="mem_2048x2.we2"/>
              <direct name="dataout1" input="mem_2048x2.out1" output="block_RAM.out1[1:0]"/>
              <direct name="dataout2" input="mem_2048x2.out2" output="block_RAM.out2[1:0]"/>
              <direct name="clk" input="block_RAM.clk" output="mem_2048x2.clk"/>
            </interconnect>
          </mode>

        </pb_type>

        <!-- jluu New proposal method part 2 (END) -->
        <fc_in type="frac">0.250000</fc_in>
        <fc_out type="frac">1.000000</fc_out>
        <pinclasses>
          <class type="in">0</class>
          <class type="in">1</class>
          <class type="in">2</class>
          <class type="in">3</class>
          <class type="in">4</class>
          <class type="in">5</class>
          <class type="in">6</class>
          <class type="in">7</class>
          <class type="in">8</class>
          <class type="in">9</class>
          <class type="in">10</class>
          <class type="in">11</class>
          <class type="in">12</class>
          <class type="in">13</class>
          <class type="in">14</class>
          <class type="in">15</class>
          <class type="in">16</class>
          <class type="in">17</class>
          <class type="in">18</class>
          <class type="in">19</class>
          <class type="in">20</class>
          <class type="in">21</class>
          <class type="in">22</class>
          <class type="in">23</class>
          <class type="in">24</class>
          <class type="in">25</class>
          <class type="in">26</class>
          <class type="in">27</class>
          <class type="in">28</class>
          <class type="in">29</class>
          <class type="in">30</class>
          <class type="in">31</class>
          <class type="out">32</class>
          <class type="out">33</class>
          <class type="out">34</class>
          <class type="out">35</class>
          <class type="out">36</class>
          <class type="out">37</class>
          <class type="out">38</class>
          <class type="out">39</class>
          <class type="global">40</class>
        </pinclasses>
        <pinlocations>
          <loc side="left">1 5 9 13 17 21 23 27 31 </loc>
          <loc side="left"  offset="1">33 34 35 36 37 </loc>
          <loc side="right"  offset="1">38 39 40</loc>
          <loc side="right">3 7 11 15 19 25 29 </loc>
          <loc side="top" offset="1">2 6 10 14 18 24 28 32 </loc>
          <loc side="bottom">0 4 8 12 16 20 22 26 30 </loc>
        </pinlocations>
        <gridlocations>
          <loc type="col" start="6" repeat="9" priority="7"/>
        </gridlocations>
      </type>

     
    </typelist>
  </architecture>

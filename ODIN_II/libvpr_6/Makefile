CC = gcc
AR = ar

WARN_FLAGS = -Wall 

DEBUG_FLAGS = -g
OPT_FLAGS = -O2
INC_FLAGS = -Iinclude
LIB_FLAGS = rcs

EXE = read_arch

FLAGS = $(DEBUG_FLAGS) $(WARN_FLAGS) $(INC_FLAGS)
FLAGS += -MD -MP

OBJS = read_xml_arch_file.o read_xml_util.o ezxml.o ReadLine.o util.o 
SRC = read_xml_arch_file.c read_xml_util.c ezxml.c ReadLine.c util.c 
H = read_xml_arch_file.h read_xml_util.h ezxml.h ReadLine.h util.h arch_types.h physical_types.h logic_types.h

libvpr_6.a: $(OBJS)
	$(AR) $(LIB_FLAGS) $@ $(OBJS)
	cp libvpr_6.a libvpr.a

# Standalone executable to test architecture reader
$(EXE): main.c main.o libvpr_6.a
	$(CC) main.c -MD -MP $(INC_FLAGS) -c
	$(CC) main.o -o $(EXE) $(INC_FLAGS) -L../libvpr_6 -lm -lvpr_6
	cp libvpr_6.a libvpr.a


.c.o:%.c $(H)
	$(CC) $(FLAGS) -c $< -o $@ 

clean :
	rm -f libvpr_6.a
	rm -f libvpr.a
	rm -f $(OBJS) $(OBJS:.o=.d)
	rm -f read_arch

